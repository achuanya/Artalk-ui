.atk-main-editor {
  $editor-padding: 10px;
  position: relative;
  overflow: hidden;
  // background: var(--at-color-bg);
  // border: 1px solid var(--at-color-border);
  border-radius: $block-radius;
  margin-bottom: 10px;

  @media only screen and (max-width: 640px) {
    margin-bottom: 7px;
  }

  &.editor-traveling {
    margin-top: 5px;
    margin-bottom: 10px;
  }

  & > .atk-header {
    display: flex;
    flex-direction: row;
    padding: 7px 0;
    gap: 15px;

    @media only screen and (max-width: 640px) {
      flex-direction: column;
      align-items: flex-end;
      gap: 8px;
      padding: 8px 0;
    }

    input {
      flex: 1;
      min-width: 0; // 防止flex子元素溢出
      font-size: 12px;
      background: var(--at-color-bg);
      border: 2px solid var(--at-textarea-border-color);
      border-radius: calc($block-radius / 2);
      height: 32px;
      resize: none;
      outline: none;
      text-indent: 10px;

      @media only screen and (max-width: 640px) {
        width: 70%;
        max-width: 280px;
        flex: none;
      }

      // 在中等屏幕尺寸下添加过渡效果
      @media only screen and (min-width: 641px) and (max-width: 768px) {
        min-width: 120px;
      }
    }

    // 确保每个输入框都有合适的最小宽度
    .atk-name {
      min-width: 80px;
    }

    .atk-email {
      min-width: 120px;
    }

    .atk-link {
      min-width: 100px;
    }
  }

  & > .atk-textarea-wrap {
    position: relative;
    background-color: var(--at-color-bg);
    border-radius: inherit;
    border: 2px solid var(--at-textarea-border-color);

    & > .atk-textarea {
      display: block;
      overflow: hidden;
      color: var(--at-color-font);
      font-size: 15px;
      background-color: var(--at-color-bg);
      width: 100%;
      min-height: 74px;
      margin-top: 2px;
      padding: 10px 10px;
      resize: none;
      word-wrap: break-word;
      outline: none;
      border: none;
      border-radius: 4px;
    }

    & > .atk-comment-closed {
      pointer-events: none;
      color: var(--at-color-meta);
      font-size: 12px;
      background-color: var(--at-color-bg);
      border-top: 1px solid var(--at-color-border);
      padding: 5px 15px;
      margin-top: 10px;
      // background: repeating-linear-gradient(145deg, #f2f2f2, #f2f2f2 15px, #fff 0, #fff 30px);
    }
  }

  & > .atk-plug-panel-wrap {
    position: relative;
    width: 100%;
    overflow: hidden;
    // border-top: 1px solid var(--at-color-border);
    animation: 0.3s both atkFadeIn;
    transition: 0.2s height ease-in-out;
  }

  .atk-bottom {
    display: flex;
    flex-direction: row;
    row-gap: 5px;
    justify-content: space-between;
    padding: 2px 0 2px 2px;
    flex-wrap: wrap;
    border-top: 2px solid var(--at-textarea-border-color);
    background-color: var(--at-toolbar-background-color);
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;

    @media only screen and (max-width: 640px) {
      padding-left: 8px;
    }

    & > .atk-item {
      display: flex;
      flex-direction: row;
      align-items: center;
    }

    & > .atk-bottom-left {
      & > .atk-state-wrap {
        margin-right: 5px;
      }

      & > .atk-plug-btn-wrap {
        display: flex;
        flex-direction: row;
        align-items: center;
        flex-wrap: wrap;
        row-gap: 5px;
      }
    }

    .atk-plug-btn {
      display: flex;
      justify-content: center;
      place-items: center;
      padding: 0 5px;
      line-height: 30px;
      height: 25px;
      cursor: pointer;
      color: var(--at-color-grey);
      font-size: $font-size;
      user-select: none;
      border-radius: calc($block-radius / 2);
      word-break: keep-all;

      &:not(:last-child) {
        margin-right: 5px;
      }

      &:hover {
        background: var(--at-color-bg-grey-transl);
      }

      &.active {
        color: var(--at-color-main);
        background: var(--at-color-bg-grey-transl);

        svg.markdown path {
          fill: var(--at-color-main);
        }
      }

      i {
        display: flex;
        justify-content: center;
        place-items: center;
        color: var(--at-color-grey);

        &:not(:first-child) {
          margin-left: 4px;
        }
      }
    }

    .atk-state-btn {
      z-index: 2;
      height: 30px;
      padding: 0 0 0 10px;
      font-size: 14px;
      position: relative;
      display: flex;
      flex-direction: row;
      justify-content: center;
      place-items: center;
      background: var(--at-color-bg-grey-transl);
      cursor: pointer;
      overflow: hidden;
      border-radius: calc($block-radius / 2);

      @media only screen and (max-width: 640px) {
        padding: 0;

        .atk-text-wrap {
          display: none;
        }
      }

      .atk-text-wrap {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        padding: 0 8px 0 2px;
        max-width: 8em;
      }

      .atk-cancel {
        display: flex;
        justify-content: center;
        place-items: center;
        padding: 0 10px;
        font-weight: 700;
        height: 100%;
        background: rgba(0, 0, 0, 0.15);
      }
    }

    .atk-send-btn {
      background: var(--at-color-main);
      color: var(--at-color-bg);
      font-size: 14px;
      border: none;
      margin: 0;
      height: 30px;
      min-width: 7.3em;
      cursor: pointer;
      transition: opacity 0.3s ease-in-out;
      outline: none;
      border-radius: calc($block-radius / 2);

      @media only screen and (max-width: 640px) {
        min-width: 6em;
      }

      &:active {
        opacity: 0.9;
      }
    }
  }

  & > .atk-notify-wrap {
    z-index: 3;
    position: absolute;
    right: -2px;
    bottom: 116px;
    width: 225px;
    opacity: 0.83;
  }
}

// 仿 Fooleap Disqus 布局 
.atk-comment-box {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 15px;

  @media only screen and (max-width: 640px) {
    gap: 10px;
    align-items: stretch;
  }

  .atk-comment-avatar {
    flex-shrink: 0;
    padding-left: 10px;

    .atk-comment-avatar-image {
      width: 50px;
      height: 50px;
      border-radius: calc($block-radius / 2);
      display: block;
    }

    @media only screen and (max-width: 640px) {
      padding-left: 10px;
    }
  }

  .atk-comment-form {
    flex: 1;
    min-width: 0; // 防止flex子元素溢出
  }

  // 折叠状态样式
  &.atk-collapsed {
    cursor: pointer;
    
    .atk-main-editor {
      .atk-textarea-wrap {
        .atk-textarea {
          height: 44px !important;
          min-height: 44px !important;
          resize: none;
          cursor: pointer;
        }
      }
    }

    // 折叠状态下隐藏所有元素（除了textarea）
    .atk-collapsible-section[data-section="bottom"],
    .atk-collapsible-section[data-section="header"],
    .atk-collapsible-section[data-section="panel"],
    .atk-collapsible-section[data-section="notify"],
    .atk-collapsible-section[data-section="submit"] {
      display: none !important;
    }
  }

  // 展开动画
  .atk-collapsible-section {
    transition: all 0.3s ease-in-out;
    
    &.atk-expanding {
      opacity: 0;
      transform: translateY(-10px);
    }
    
    &:not(.atk-expanding) {
      opacity: 1;
      transform: translateY(0);
    }
  }

  // 特殊处理textarea区域的动画
  .atk-textarea-wrap {
    transition: all 0.3s ease-in-out;
    
    .atk-textarea {
      transition: height 0.3s ease-in-out, min-height 0.3s ease-in-out;
    }
  }

  // 展开状态下的样式
  &:not(.atk-collapsed) {
    .atk-textarea-wrap {
      .atk-textarea {
        height: auto;
        min-height: 74px;
        cursor: text;
      }
    }
  }

  // 回复模式下头像缩小样式（仅PC端生效）
  @media only screen and (min-width: 769px) {
    &:has(.atk-state-btn) {
      .atk-comment-avatar {
        .atk-comment-avatar-image {
          width: 36px;
          height: 36px;
        }
      }
    }
  }
}

// 新按钮样式
.atk-new-btn {
  border: none;
  white-space: nowrap;
  border-radius: 4px;
  height: 38px;
  width: 80px;
  display: inline-block;
  background-color: var(--at-btn-background-color);
  color: var(--at-btn-font-color) !important;
  cursor: pointer;
  line-height: 38px;
}

.atk-item {
  display: flex;
  justify-content: flex-end;
  padding: 0px 0px 0px 0px;

  @media only screen and (max-width: 640px) {
    padding: 5px 0;
  }
}
